name: Publish to PyPI
on:
  workflow_run:
    workflows: ["Bump version"]
    types:
      - completed

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for tags
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Get version
      id: get_version
      run: |
        echo "VERSION=$(python -c 'from importlib.metadata import version; print(version("mcp_pack"))')" >> $GITHUB_OUTPUT
    - name: Store version
      run: |
        echo "${{ steps.get_version.outputs.VERSION }}" > version.txt
      shell: bash
    - name: Upload version info
      uses: actions/upload-artifact@v4
      with:
        name: version-info
        path: version.txt

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mcp_pack 
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  create-github-release:
    name: Create GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases
      
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for tags
    - name: Download version info
      uses: actions/download-artifact@v4
      with:
        name: version-info
    - name: Set version variable
      id: version
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          Release of mcp_pack version ${{ steps.version.outputs.VERSION }}
          
          See the [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
        files: |
          dist/*
        draft: false